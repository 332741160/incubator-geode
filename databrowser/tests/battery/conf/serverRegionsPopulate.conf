INCLUDE $JTESTS/hydraconfig/hydraparams1.inc;
INCLUDE $JTESTS/hydraconfig/gemfireprms.inc;
INCLUDE $JTESTS/hydraconfig/topology_2.inc;

hydra.Prms-testDescription = "Test to start required no of servers ,populate the regions data";

hydra.Prms-totalTaskTimeSec 			= 300;
hydra.Prms-maxResultWaitSec 			= 350;

//For starting the agent 
hydra.AdminPrms-names				= admin;
hydra.AdminPrms-distributedSystem		= ds;
hydra.AgentPrms-names				= agent1;
hydra.AgentPrms-adminName			= admin;

hydra.BridgePrms-names       	         	= bridge;
//hydra.BridgePrms-notifyBySubscription 		= true;

hydra.CachePrms-names				= bridge agent;
hydra.ConfigPrms-cacheConfig      		= bridge;
hydra.ConfigPrms-bridgeConfig     		= bridge;
hydra.ConfigPrms-agentConfig			= agent;

hydra.GemFirePrms-useLocator                    = true;

hydra.GemFirePrms-names				= fcn "hydra.TestConfigFcns.generateNames(\"${A}gemfire\", ${${A}Hosts})" ncf
			                          fcn "hydra.TestConfigFcns.generateNames(\"${B}gemfire\", ${${B}Hosts})" ncf;
						  

hydra.GemFirePrms-useLocator			= fcn "hydra.TestConfigFcns.duplicate(\"true\",    ${${A}Hosts})" ncf
                                                  fcn "hydra.TestConfigFcns.duplicate(\"true\",    ${${B}Hosts})" ncf;
                                                  

hydra.GemFirePrms-enableMcast		        = fcn "hydra.TestConfigFcns.duplicate(\"false\",    ${${A}Hosts})" ncf
                                                  fcn "hydra.TestConfigFcns.duplicate(\"false\",    ${${B}Hosts})" ncf;   
                                                  

hydra.GemFirePrms-distributedSystem		= fcn "hydra.TestConfigFcns.duplicate(\"ds\",    ${${A}Hosts})" ncf
		                                  fcn "hydra.TestConfigFcns.duplicate(\"ds\",    ${${B}Hosts})" ncf;
					          


hydra.log.LogPrms-file_logLevel			= fine;

//hydra.HostPrms-hostNames			= fcn "hydra.TestConfigFcns.duplicate(\"halibut\",  ${${A}Hosts})" ncf
//						  fcn "hydra.TestConfigFcns.duplicate(\"halibut\",  ${${B}Hosts})" ncf;

hydra.RegionPrms-names                  	= serverRegion	serverRegion1	serverRegion2	serverRegion3;	
hydra.RegionPrms-regionName     		= Employee	Shipment	Customer	Order;
hydra.RegionPrms-interestPolicy         	= All		All		All		All;
hydra.RegionPrms-scope                  	= global	global		global		global;
hydra.RegionPrms-dataPolicy     		= replicate	replicate	replicate	replicate;
hydra.RegionPrms-partitionName  		= none		none		none		none;
hydra.RegionPrms-multicastEnabled 		= true		true		true		true;
hydra.RegionPrms-statisticsEnabled		= true;


// For security enabling. 

//hydra.GemFirePrms-securityName		= dummyScheme;
//hydra.SecurityPrms-names			= dummyScheme;
//hydra.SecurityPrms-clientAuthenticator	= security.DataBrowserAuthenticator.create;
//hydra.SecurityPrms-clientAccessor		= security.QueryAuthorization.create;
//hydra.SecurityPrms-clientExtraProperties	= security.DummyUserPasswordPrms;
//security.DummyUserPasswordPrms-username	= databrowser;
//security.DummyUserPasswordPrms-password	= databrowser;

//hydra.GemFirePrms-locatorSecurityName		= dummyScheme;		  
//hydra.SecurityPrms-peerAuthInit		= admin.security.DataBrowserAuthInit.create;


hydra.VmPrms-type                       	= fcn "hydra.TestConfigFcns.duplicate(\"server\",  ${bridgeHosts})" ncf;

hydra.VmPrms-extraClassPaths        		= $GEMFIRE/lib/antlr.jar 
						  $GEMFIRE/lib/gemfire.jar
						  $GEMFIRE/lib/commons-logging.jar
                                                  $GEMFIRE/lib/commons-modeler-2.0.jar
						  $GEMFIRE/lib/mx4j.jar
                                                  $GEMFIRE/lib/mx4j-remote.jar
                                                  $GEMFIRE/lib/mx4j-tools.jar
                                                  $GEMFIRE/lib/mail.jar
                                                  $GEMFIRE/lib/security.jar;
                                                                                                
// Server Entities Setup
//admin.jmx.RecyclePrms-numberOfEntitiesInRegion= 20;
admin.jmx.RecyclePrms-sleepBetweenCycles   	= 120;

  						 					          					
						    						  						  						    						  				
THREADGROUP bridgeServer
    totalThreads = ${bridgeHosts}
    totalVMs = ${bridgeHosts}
    clientNames  = fcn "hydra.TestConfigFcns.generateNames(\"bridge\", ${bridgeHosts}, true)" ncf;

THREADGROUP agentForDS1
    totalThreads = ${agentHosts}
    totalVMs = ${agentHosts}
    clientNames  = fcn "hydra.TestConfigFcns.generateNames(\"agent\", ${agentHosts}, true)" ncf;
   

INITTASK  taskClass = admin.jmx.JMXHelper
	  taskMethod = startJMXAgent
	  hydra.ConfigPrms-agentConfig = agent1
	  threadgroups = agentForDS1
          runMode = always
      	  ;

INITTASK  taskClass = com.gemstone.databrowser.CustomDataGenerator
          taskMethod = startServerCache
          threadGroups = bridgeServer	  
          ;
                                      
TASK  	  taskClass = com.gemstone.databrowser.MultipleRegionsDataGenerator
          taskMethod = populateRegions
          threadGroups = bridgeServer
          ;          

          
